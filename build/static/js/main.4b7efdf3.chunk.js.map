{"version":3,"sources":["services/phonebook.js","components/Inputs.js","components/Notification.js","components/ContactForm.js","components/Phonebook.js","App.js","reportWebVitals.js","index.js"],"names":["serviceUrl","exports","getAll","axios","get","then","response","data","createObj","newObj","post","deleteObj","objId","delete","updateObj","put","id","NameInput","persons","fields","setFields","setMatchedName","name","value","onChange","event","target","matched","filter","p","length","PhoneInput","type","pattern","number","Notification","notification","setNotification","useEffect","setTimeout","className","message","ContactForm","setPersons","useState","matchedName","onSubmit","preventDefault","person","window","confirm","oldInfo","newInfo","phonebookService","newPerson","map","catch","error","concat","PersonFilter","setFilter","filterStr","toLowerCase","DeletePersonButton","deletePerson","onClick","Person","Phonebook","filtered","includes","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4b7efdf3.chunk.js","sourcesContent":["import axios from 'axios';\n\nconst serviceUrl = '/api/phonebook';\n\nconst getAll = () => axios.get(serviceUrl)\n  .then(response => response.data);\n\nconst createObj = newObj => axios.post(serviceUrl, newObj)\n  .then(response => response.data);\n\nconst deleteObj = objId => axios.delete(`${serviceUrl}/${objId}`)\n  .then(response => response.data);\n\nconst updateObj = newObj => axios.put(`${serviceUrl}/${newObj.id}`, newObj)\n  .then(response => response.data);\n\nconst exports = { getAll, createObj, deleteObj, updateObj};\nexport default exports;\n","const NameInput = ({persons, fields, setFields, setMatchedName}) => {\n  const handleChange = (event) => {\n    const name = event.target.value;\n    const matched = persons.filter(p => p.name === name).length > 0;\n    setMatchedName(matched);\n    setFields({ ...fields, name });\n  };\n  return (\n    <div>\n    name: <input name='name' value={fields.name} onChange={handleChange} />\n    </div>\n  );\n};\n\nconst PhoneInput = ({fields, setFields}) => {\n  const handleChange = (event) => setFields({ ...fields, number: event.target.value});\n  return (\n    <div>\n      phone: <input type='tel' name='number' pattern='[0-9-]{5,}' value={fields.number} onChange={handleChange} />\n    </div>\n  );\n};\n\nexport { NameInput, PhoneInput };\n","import { useEffect } from 'react';\n\nconst notificationDissapearTimeout = 5000;\n\nconst Notification = ({ notification, setNotification }) => {\n  useEffect(() => setTimeout(\n    () => setNotification(null),\n    notificationDissapearTimeout\n  ));\n\n  if (notification == null) {\n    return null;\n  }\n  return (\n    <div className={notification.type}>\n      {notification.message}\n    </div>\n  );\n};\n\nexport default Notification;\n","import React, { useState } from 'react';\nimport phonebookService from '../services/phonebook';\nimport { PhoneInput, NameInput } from './Inputs';\nimport Notification from './Notification';\n\nconst ContactForm = ({persons, setPersons, notification, setNotification }) => {\n  const [ fields, setFields ] = useState({name: '', number: ''})\n  const [ matchedName, setMatchedName ] = useState(false);\n\n  const addName = (event) => {\n    event.preventDefault();\n    const person = {name: event.target[0].value, number: event.target[1].value};\n    const matched = persons.filter(p => p.name === person.name);\n    if (matched.length > 0) {\n      const message = `${person.name} is already in the phonebook.\\n` +\n        'Are you sure you want to replace the number with a new one?';\n      const replaceConfirmed = window.confirm(message);\n      if (replaceConfirmed) {\n        const oldInfo = matched[0];\n        const newInfo = { ...oldInfo, number: person.number };\n        phonebookService\n          .updateObj(newInfo)\n          .then(newPerson => {\n            setPersons(persons.map(p => p.id === newPerson.id ? newPerson : p));\n            setNotification({ type: 'notification', message: `${newPerson.name}'s phone was updated` });\n          })\n          .catch(error =>\n            setNotification({ type: 'error', message: error })\n          );\n      }\n    } else {\n      phonebookService\n        .createObj(person)\n        .then(newPerson => {\n          setPersons(persons.concat(newPerson));\n          setNotification({ type: 'notification', message: `${newPerson.name}'s phone was added` });\n        })\n        .catch(error =>\n          setNotification({ type: 'error', message: error })\n        );\n      ;\n    }\n    setFields({name: '', number: ''});\n    setMatchedName(false);\n  };\n\n  return (\n    <div>\n      <Notification notification={notification} setNotification={setNotification} />\n      <form onSubmit={addName}>\n        <NameInput\n          fields={fields}\n          setFields={setFields}\n          persons={persons}\n          setMatchedName={setMatchedName}\n        />\n        <PhoneInput\n          fields={fields}\n          setFields={setFields}\n        />\n        <div className='submit-button'>\n          <button type='submit'>{matchedName ? 'Update' : 'Add'}</button>\n        </div>\n      </form>\n    </div>\n  )\n}\n\nexport default ContactForm;\n","import React, { useState } from 'react';\nimport phonebookService from '../services/phonebook';\n\nconst PersonFilter = ({filter, setFilter}) => {\n\tconst filterNames = (event) => {\n    const filterStr = event.target.value.toLowerCase()\n\t\tsetFilter(filterStr)\n  };\n  return (\n    <div>\n      Filter names: <input name='filter' value={filter} onChange={filterNames} />\n    </div>\n  );\n};\n\nconst DeletePersonButton = ({ deletePerson }) => {\n  return <button onClick={deletePerson}>delete</button>;\n};\n\nconst Person = ({ person, deletePerson }) => (\n  <tr>\n    <td>{person.name}</td>\n    <td>{person.number}</td>\n    <td><DeletePersonButton deletePerson={() => deletePerson(person)} /></td>\n  </tr>\n);\n\nconst Phonebook = ({ persons, setPersons, setNotification }) => {\n  const [ filter, setFilter ] = useState('');\n  const filtered = persons.filter(p => p.name.toLowerCase().includes(filter));\n  const deletePerson = person => {\n    const deleteConfirmed = window.confirm(`Delete ${person.name}?`);\n    if (deleteConfirmed) {\n      phonebookService\n        .deleteObj(person.id)\n        .then(() => {\n          setPersons(persons.filter(p => p.id !== person.id));\n          setNotification({ type: 'notification', message: `${person.name} was deleted` });\n        })\n        .catch(error => {\n          setNotification({ type: 'error', message: `${person.name} was already removed` });\n          setPersons(persons.filter(p => p.id !== person.id));\n        });\n    }\n  };\n  return (\n    <div>\n      <h2>Phones</h2>\n      <PersonFilter filter={filter} setFilter={setFilter} />\n      <table>\n        <thead>\n          <tr><th>Name</th><th>Number</th><th></th></tr>\n        </thead>\n        <tbody>\n          {filtered.map(person =>\n            <Person\n              key={person.name}\n              person={person}\n              deletePerson={deletePerson}\n            />\n          )}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n\nexport default Phonebook\n","import React, { useState, useEffect } from 'react';\nimport phonebookService from './services/phonebook';\nimport ContactForm from './components/ContactForm';\nimport Phonebook from './components/Phonebook';\nimport './App.css';\n\nconst App = () => {\n  const [ persons, setPersons ] = useState([\n    { name: '', number: ''},\n  ]);\n  const [ notification, setNotification ] = useState(null);\n\n  useEffect(() => {\n    phonebookService\n      .getAll()\n      .then(data => setPersons(data));\n  }, []);\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <ContactForm\n        persons={persons}\n        setPersons={setPersons}\n        notification={notification}\n        setNotification={setNotification}\n      />\n      <Phonebook\n        persons={persons}\n        setPersons={setPersons}\n        setNotification={setNotification}\n      />\n    </div>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}